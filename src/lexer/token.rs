/// The kind of token
#[derive(Copy, Clone, Debug, Default, PartialEq, PartialOrd)]
pub enum TokenKind {
    Number,
    String,
    Char,
    AsKw,
    BreakKw,
    ConstKw,
    ContinueKw,
    ElseKw,
    ExternKw,
    FalseKw,
    TrueKw,
    FnKw,
    ForKw,
    IfKw,
    InKw,
    LetKw,
    CaseKw,
    LoopKw,
    SwitchKw,
    ModuleKw,
    PublicKw,
    PrivateKw,
    InternalKw,
    ImportKw,
    TankKw,
    EnumKw,
    RefKw,
    ReturnKw,
    SelfKw,
    StructKw,
    UnsafeKw,
    UseKw,
    WhileKw,
    AsyncKw,
    AwaitKw,
    DynKw,
    AbstractKw,
    OverrideKw,
    VirtualKw,
    SafeKw,
    TraitKw,
    I8Kw,
    I16Kw,
    I32Kw,
    I64Kw,
    U8Kw,
    U16Kw,
    U32Kw,
    U64Kw,
    F16Kw,
    F32Kw,
    F64Kw,
    BoolKw,
    CharKw,
    VoidKw,
    Semicolon,
    Comma,
    Dot,
    OpenParen,
    CloseParen,
    OpenBracket,
    CloseBracket,
    OpenBrace,
    CloseBrace,
    Pound,
    Question,
    Colon,
    Equal,
    Bang,
    LessThan,
    GreaterThan,
    Minus,
    Carat,
    And,
    Or,
    Plus,
    Star,
    Slash,
    Percent,
    Name,
    #[default]
    Unknown,
}

#[derive(Clone, Debug, Default, PartialEq, PartialOrd)]
pub struct Token {
    pub kind: TokenKind,
    pub value: String,
    pub line: usize,
    pub start_col: usize,
    pub end_col: usize,
}
impl Token {
    /// Create a new instance of Token
    pub fn new() -> Self {
        Self {
            kind: TokenKind::Unknown,
            value: String::new(),
            line: 0,
            start_col: 0,
            end_col: 0,
        }
    }
}
